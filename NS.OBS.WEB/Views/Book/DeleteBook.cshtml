@model NS.OBS.Model.BookModel
@{
    Layout = null;
}



<h1>Delete Book</h1>

<hr />
<hr />
<div class="row">
    <div class="col-md-10">
        @using (Html.BeginForm(FormMethod.Post,new { id = "formaddEmployee" }))
        {
            @Html.ValidationSummary(false)
            @Html.AntiForgeryToken()
        <div class="container-fluid">
            @Html.HiddenFor(model => model.BookId)

            <div class="form-group">
                <div class="md-10">
                    @Html.LabelFor(
                model => model.BookId, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.BookId, new { disabled = "disabled", @readonly = "readonly" })
                    </div>
                </div>
            </div>
            <br />
             <div class="form-group">
        <label for="BookName" class="col-md-3 control-label">BookName </label>
        <div class="col-md-9">
            @Html.TextBoxFor(x => x.BookName, "", new { @class = "form-control", placeholder = "BookName" })
            @Html.ValidationMessageFor(x => x.BookName, "Please enter Book Name", new { @class = "text-danger", style = "display:none" })
        </div>
    </div>
    <br/>
            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "Please Enter Book Category", new { @class = "text-danger", style = "display:none" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Author, "Enter Author Name", new { @class = "text-danger", style = "display:none" })
                </div>
            </div>

            

            <div class="form-group">
                @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Author, "Enter Publisher Name", new { @class = "text-danger", style = "display:none" })
                </div>
            </div>

              <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "Enter Description ", new { @class = "text-danger", style = "display:none" })
                </div>
            </div>

          
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button id="btn-addbook" type="submit" class="btn btn-primary" value="Save">Save</button>

                </div>
            </div>
        </div>
        }
    </div>
</div>

<div>
    <a asp-action="GetAllBooks">Back to Book List</a>
</div>
<script src="~/js/AddEmployee.js"></script>